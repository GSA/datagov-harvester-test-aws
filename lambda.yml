version: 1
name: lambda
id: a1fa5f24-ed73-48e8-a99f-14906728b945
description: Customizable python lambda function
display_name: Lambda Function
image_url: https://github.com/GSA/datagov-11ty/raw/main/_img/logo.png
documentation_url: https://aws.amazon.com/lambda/
support_url: https://github.com/GSA/datagov-brokerpak-harvester-aws
tags: [aws, lambda, function, harvester]

plans:
- name: base
  id: 4d7f0501-77d6-4d21-a37a-8b80a0ea9c0d
  description: Provision a python lambda function
  display_name: Provision a python lambda function
  bullets:
  - "REQUIRED prerequisite: An AWS Account into which Lambda Funcstion will be created."
  properties: {}
provision:
  plan_inputs: []
  user_inputs:
  - field_name: script
    required: true
    type: string
    details: "Python script in the form of a multiline string."
  - field_name: sqsInput
    required: true
    type: string
    details: "SQS Resource that will trigger lambda call."
  computed_inputs:
  - name: name
    type: string
    details: "The name of the lambda function."
    overwrite: true
    default: ${request.instance_id}
  - name: script
    default: "print('You need to supply a script!')"
    overwrite: true
    type: string
  - name: sqs_input
    overwrite: true
    type: string
    default: ""
  - name: region
    type: string
    details: "The AWS region in which to create all AWS resources"
    overwrite: true
    default: ${config("aws.default_region")}
  - name: zone
    type: string
    details: "The Route53 zone in which to create k8s instances"
    overwrite: true
    default: ${config("aws.zone")}
  outputs:
  template_refs:
    variables: terraform/lambda/provision/variables.tf
    outputs: terraform/lambda/provision/outputs.tf
    lambda: terraform/lambda/provision/lambda.tf
    versions: terraform/lambda/provision/versions.tf
bind:
  plan_inputs: []
  user_inputs: []
  computed_inputs:
  - name: name
    default: ${request.instance_id}
    overwrite: true
    type: string
  outputs:
  template_refs:
    main: terraform/lambda/bind/main.tf
    versions: terraform/lambda/bind/versions.tf

examples: []
plan_updateable: false
requiredenvvars: []
